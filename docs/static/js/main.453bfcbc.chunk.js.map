{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","onSubmit","className","id","type","placeholder","target","value","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAAD,EAApBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAe,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAGlB,OACE,sBAAMO,SAAUN,EAAhB,SACE,qBAAKO,UAAU,OAAf,SACE,sBAAKA,UAAU,iEAAf,UACE,0BACEA,UAAU,sFACVC,GAAG,SACHC,KAAK,OACLC,YAAY,2BAJd,qBAKO,QALP,sBAMSZ,GANT,0BAfkB,SAACG,GACzBF,EAAcE,EAAEU,OAAOC,UAcjB,IAUA,qBAAKL,UAAU,MAAf,SACE,wBAAQM,QAASb,EAAcO,UAAU,8HAAzC,8B,+BChCCO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,8DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLjB,GAAIiB,EAAIjB,GACRkB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXjB,kBAcdM,GAdc,4CAAH,sDCEPM,EAAc,SAACJ,GAC1B,OACE,sBAAKlB,UAAU,2DAAf,UACE,qBAAKuB,IAAKL,EAAIR,IAAKc,IAAKN,EAAIC,QAC5B,mBAAGnB,UAAU,GAAb,SAAiBkB,EAAIC,YCFdM,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNW,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OAVAC,qBAAU,WACRtB,EAAQC,GAAUsB,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPb,KAAMgB,EACNL,SAAS,MAEV,UAEJ,CAAClB,IACGmB,EDb2BM,CAAazB,GAAjCY,EAAd,EAAQL,KAAcW,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAI1B,UAAU,eAAd,SAA8BQ,IAC7BkB,GAAW,mBAAG1B,UAAU,qBAAb,kCACZ,qBAAKA,UAAU,YAAf,SACGoB,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aETnBiC,EAAe,WAC1B,MAAoC5C,mBAAS,CAAC,KAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACE,qCACE,oBAAIW,UAAU,QAAd,4BACA,cAAC,EAAD,CAAaX,cAAeA,IAC5B,6BACG8C,EAAWlB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCTjB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.453bfcbc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"p-12\">\r\n        <div className=\"m-auto bg-white w-1/2 flex items-center rounded-full shadow-md\">\r\n          <input\r\n            className=\"ml-4 rounded-l-full w-full py-4 px-6 text-gray-700 leading-tight focus:outline-none\"\r\n            id=\"search\"\r\n            type=\"text\"\r\n            placeholder=\"¡Encuentra tus GIFS!\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <div className=\"p-4\">\r\n            <button onClick={handleSubmit} className=\"bg-purple-500 text-white rounded-full p-2 hover:bg-purple-700 focus:outline-none w-24 h-12 flex items-center justify-center\">\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=5&api_key=y6u8WlimtqyG98S0VDLyXZejYYry2HIR`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = (img) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInTopRight shadow-md\">\r\n      <img src={img.url} alt={img.title} />\r\n      <p className=\"\">{img.title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"searchResult\">{category}</h3>\r\n      {loading && <p className=\"m-auto text-center\">Cargando informacion</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 500);\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">¡GIFExpert!</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid \r\n            key={category}\r\n            category={category}\r\n            />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}